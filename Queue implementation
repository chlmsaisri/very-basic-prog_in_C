// tc is for all is o(1),except display-o(n)


#include <stdio.h>
#define MAX_SIZE 5

int front = -1; // index of the front element
int rear = -1;  // index of the rear element
int queue[MAX_SIZE]; // array to store queue elements

// Function to check if the queue is empty
int isEmpty() {
    return (front == -1);
}

// Function to check if the queue is full
int isFull() {
    return (rear == MAX_SIZE - 1);
}

// Function to add an element to the rear of the queue
void enqueue(int value) {
    if (isFull()) {
        printf("Queue overflow\n");
        return;
    }

    if (isEmpty()) {
        front = 0; // If the queue is empty, set front to 0
    }

    rear++;
    queue[rear] = value;
}

// Function to remove and return the front element from the queue
int dequeue() {
    if (isEmpty() || front > rear) {
        printf("Queue underflow\n");
        return -1; // Return a sentinel value or handle the underflow case appropriately
    }

    int value = queue[front];
    front++;

    if (front > rear) {
        // If all elements are removed, reset front and rear
        front = -1;
        rear = -1;
    }

    return value;
}

// Function to get the front element of the queue without removing it
int peek() {
    if (isEmpty() || front > rear) {
        printf("Queue is empty\n");
        return -1; // Return a sentinel value or handle the empty queue case appropriately
    }

    return queue[front];
}

// Function to get the size of the queue
int size() {
    return (rear - front + 1);
}

// Function to display the elements of the queue
void display() {
    if (isEmpty() || front > rear) {
        printf("Queue is empty\n");
        return;
    }

    printf("Queue: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

int main() {
    enqueue(1);
    enqueue(2);
    enqueue(3);
    display(); // Queue: 1 2 3

    int dequeuedElement = dequeue();
    printf("Dequeued element: %d\n", dequeuedElement); // Dequeued element: 1

    printf("Front element: %d\n", peek()); // Front element: 2

    printf("Queue size: %d\n", size()); // Queue size: 2

    display(); // Queue: 2 3

    return 0;
}


